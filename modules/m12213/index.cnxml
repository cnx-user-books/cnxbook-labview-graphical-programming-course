<document xmlns="http://cnx.rice.edu/cnxml" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Auto Match VI</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>0e6d63a5-b448-4e80-8814-3db69d79038d</md:uuid>
</metadata>
  
  <content>
    <exercise id="e1">
      <problem id="idp2639296">
	<para id="delete_me">
	  Complete the following steps to build a VI that generates random
	  numbers until the number generated matches a number you
	  specify. The <code>iteration </code> terminal records the number
	  of random numbers generated until a match occurs.  
	</para>
	
	
	<section id="idm6829584">
	  <title>Front Panel</title>
	  <list id="scream1" list-type="enumerated">
	    <item>
	      Open a blank VI and build the front panel shown in <link target-id="dida"/>. Modify the controls and indicators as
	      shown in the <link target-id="dida">front panel</link> and
	      as described in the following <link target-id="seren1">steps</link>.
	      <figure id="dida">
		<media id="idp4552944" alt=""><image src="../../media/automatch.png" mime-type="image/png"/></media>
	      </figure>
	      
	      <list id="seren1" list-type="enumerated">
		<item>
		  Place a numeric control, located on the
		  <code>Controls&gt;&gt;Numeric Controls</code> palette, on the
		  front panel. Label the control <code>Number to
		    Match</code>. This control specifies the number to
		  match.
		</item>
		
		<item>
		  Place a numeric indicator, located on the
		  <code>Controls&gt;&gt;Numeric Indicators </code> palette, on
		  the front panel. Label the indicator <code>Current
		    Number</code>. This indicator displays the current
		  random number.
		</item>
		
		<item>
		  Place another numeric indicator on the front
		  panel. Label the indicator <code>Number of
		    iterations</code>. This indicator displays the number of
		  iterations before a match.
		</item>
	      </list>
	    </item>
	  </list> 
	</section>
	
	<section id="idp4518048">
	  <title>Setting the Data Range</title>
	  <para id="saved1">
	    Set a data range for a control to prevent the user from
	    selecting a value that is not compatible with a range or
	    increment. You can choose to ignore a value that is out of
	    range or coerce it to within the range. Complete the following
	    <link target-id="scream2">steps</link> to set the range between
	    <code>0</code> and <code>10000</code> with an increment of
	    <code>1</code> and a default value of <code>50</code>.
	  </para>
	  
	  <list id="scream2" list-type="enumerated">
	    <item>
	      Right-click the <code>Number to Match</code> control and
	      select <code>Data Range</code> from the shortcut menu. The
	      <code>Data Range</code> page of the <code>Numeric
		Properties</code> dialog box appears.
	      <list id="seren2" list-type="enumerated">
		
		<item> 
		  Remove the checkmark from the <code>Use Default
		    Range</code> checkbox.
		</item>
		
		<item>
		  Set the <code>Default Value</code> to <code>50</code>.
		</item>
		
		<item>
		  Set the <code>Minimum value</code> to <code>0</code> and
		  select <code>Coerce</code> from the <code>Out of Range
		    Action</code> pull-down menu.
		</item>
		
		<item>
		  Set the <code>Maximum value</code> to <code>10000</code>
		  and select <code>Coerce</code> from the <code>Out of
		    Range Action</code> pull-down menu.
		</item>
		
		<item>
		  Set the <code>Increment</code> value to <code>1</code>
		  and select <code>Coerce to Nearest</code> from the
		  <code>Out of Range Action</code> pull-down menu. Do
		  not close the dialog box.
		</item>
	      </list>
	    </item>
	  </list> 
	</section>
	
	
	<section id="idm151840">
	  <title>Modifying Digits of Precision</title>
	  <para id="saved2">
	    By default, LabVIEW automatically formats numeric
	    controls. You also can specify the precision or notation. You
	    can display numeric values in floating-point, scientific, or
	    SI notation. Complete the following steps to change the
	    precision to <code>0</code>.
	  </para>
	  
	  <list id="scream3" list-type="enumerated"><item>
	      Select the <code>Format and Precision</code> tab.  If you
	      closed the <code>Numeric Properties</code> dialog box,
	      right-click the <code>Current Number</code> indicator and
	      select <code>Format &amp; Precision</code> from the shortcut
	      menu. The <code>Format &amp; Precision</code> page of the
	      <code>Numeric Properties</code> dialog box appears.
	      
	      <list id="saint1" list-type="enumerated"> 
		<item>
		  Select <code>Floating Point</code> and change
		  <code>Significant digits</code> to <code>Digits of
		    precision</code>.
		</item>
		
		<item>
		  Type <code>0</code> in the <code>Digits of
		    precision</code> text box and click the <code>OK</code>
		  button.
		</item>
	      </list>
	    </item>
	    
	    <item> 
	      Repeat the instructions to set the precision for
	      <code>Current Number</code> and <code>Number of
		iterations</code> indicators.
	    </item>
	  </list> 
	</section>
	
	<section id="idp7706576">
	  <title>Block Diagram</title>
	  <list id="scream4" list-type="enumerated">
	    <item>
	      Build the block diagram in <link target-id="ladi"/>.
	      <figure id="ladi">
		<media id="idp4605600" alt=""><image src="../../media/automatchbd.png" mime-type="image/png"/></media>
	      </figure>
	      
	      <list id="saint2" list-type="enumerated"><item>
		  <media id="idm6116544" alt=""><image src="../../media/randnum-7abe.png" mime-type="image/png"/></media> 
		  Place the <code>Random Number (0-1)</code> function,
		  located on the <code>Functions&gt;&gt;Arithmetic &amp;
		    Comparison&gt;&gt;Express Numeric </code> palette, on the
		  block diagram. This function produces a random number
		  between <m:math><m:cn>0</m:cn></m:math> and
		  <m:math><m:cn>1</m:cn></m:math>.
		</item>
		<item>
		  <media id="idp7822480" alt=""><image src="../../media/multiply-f80b.png" mime-type="image/png"/></media>
		  Place the <code>Multiply</code> function, located on the
		  <code>Functions&gt;&gt;Arithmetic &amp; Comparison&gt;&gt;Express
		    Numeric</code> palette, on the block diagram. This
		  function multiplies the random number by
		  <m:math><m:cn>10,000</m:cn></m:math> to produce a random
		  number between <m:math><m:cn>0</m:cn></m:math> and
		  <m:math><m:cn>10,000</m:cn></m:math>.
		</item>
		
		<item>
		  <media id="idp7479488" alt=""><image src="../../media/automatchconst.png" mime-type="image/png"/></media>
		  Right-click the <code>y</code> terminal of the
		  <code>Multiply</code> function, select
		  <code>Create&gt;&gt;Constant</code> from the shortcut menu,
		  type <code>10000</code>, and press the
		  <code>&lt;Enter&gt;</code> key to create a numeric
		  constant.
		</item>
		
		<item>
		  <media id="idp3440000" alt=""><image src="../../media/roundnearicon.png" mime-type="image/png"/></media>
		  Place the <code>Round To Nearest</code> function,
		  located on the <code> Functions&gt;&gt;Arithmetic &amp;
		    Comparison&gt;&gt;Express Numeric </code> palette, on the
		  block diagram. This function rounds the random number to
		  the nearest integer.
		</item>
		
		<item>
		  <media id="idp6615296" alt=""><image src="../../media/noteqicon.png" mime-type="image/png"/></media>
		  Place the <code>Not Equal?</code> function, located on
		  the <code>Functions&gt;&gt;Arithmetic &amp;
		    Comparison&gt;&gt;Express Comparison</code> palette, on the
		  block diagram. This function compares the random number
		  with <code>Number to Match</code> and returns
		  <code>True</code> if the numbers are not equal;
		  otherwise, it returns <code>False</code>.
		</item>
		
		<item>
		  <media id="idm6355584" alt=""><image src="../../media/while-9139.png" mime-type="image/png"/></media>
		  Place the <code>While Loop</code>, located on the
		  <code>Functions&gt;&gt;All Functions&gt;&gt;Structures</code>
		  palette, on the block diagram.  Right-click the
		  conditional terminal and select <code>Continue if
		    True</code> from the shortcut menu.
		  <note id="idp4887264">
		    Use the <code>While Loop</code> with <code>Stop</code>
		    button, located on the <code>Execution Control</code>
		    palette, when you need a stop button to stop the
		    <code>While Loop</code>.  In this exercise, you use
		    the <code>Number to Match</code> control to stop the
		    loop; you do not need a <code>Stop</code> button.
		  </note>
		</item>
		
		<item>
		  <media id="idp1957488" alt=""><image src="../../media/iteration.png" mime-type="image/png"/></media>
		  Wire the <code>iteration</code> terminal to the border
		  of the <code>While Loop</code>.  A blue tunnel appears
		  on the <code>While Loop</code> border. You will wire the
		  tunnel to the <code>Increment</code> function. Each time
		  the loop executes, the iteration terminal increments by
		  one. The iteration count passes out of the loop upon
		  completion.  Increment this value by one outside the
		  loop because the count starts at
		  <m:math><m:cn>0</m:cn></m:math>.
		</item>
		
		<item>
		  <media id="idp944800" alt=""><image src="../../media/incremicon-c838.png" mime-type="image/png"/></media>
		  Place the <code>Increment</code> function, located on
		  the <code>Functions&gt;&gt;Arithmetic &amp;
		    Comparison&gt;&gt;Express Numeric</code> palette, on the block
		  diagram. This function adds
		  <m:math><m:cn>1</m:cn></m:math> to the <code>While
		    Loop</code> count. A coercion dot appears on the <code>
		    Number of iterations </code> output to indicate that
		  LabVIEW coerced the numeric representation of the
		  iteration terminal to match the numeric representation
		  of the <code>Number of iterations</code> output. Refer
		  to the <link document="m12214">For Loops</link> section for
		  more information about numeric conversion.
		</item>
	      </list>
	    </item>
	    
	    <item>
	      Save the VI as <code>Auto Match.vi</code>.
	    </item>
	  </list>   
	</section>
	
	<section id="idp6407552"> 
	  <title> Run the VI </title>
	  <list id="end1" list-type="enumerated">
	    <item> 
	      Display the front panel and change the number in
	      <code>Number to Match</code>.
	    </item>
	    
	    <item>
	      Run the VI. Change <code>Number to Match</code> and run the
	      VI again. <code>Current Number</code> updates at every
	      iteration of the loop because it is inside the
	      loop. <code>Number of iterations</code> updates upon
	      completion because it is outside the loop.
	    </item>
	    
	    <item> 
	      <media id="idp2032928" alt=""><image src="../../media/exehilit-0604.png" mime-type="image/png"/></media>
	      To see how the VI updates the indicators, enable execution
	      highlighting. On the block diagram toolbar, click the
	      <code>Highlight Execution</code> button, shown at left, to
	      enable execution highlighting. Execution highlighting shows
	      the movement of data on the block diagram from one node to
	      another so you can see each number as the VI generates it.
	    </item>

	    <item> 
	      Change <code>Number to Match</code> to a number that is out
	      of the data range, which is <m:math><m:cn>0</m:cn></m:math>
	      to <m:math><m:cn>10000</m:cn></m:math> with an increment of
	      <m:math><m:cn>1</m:cn></m:math>.
	    </item> 

	    <item> 
	      Run the VI. LabVIEW coerces the out-of-range value to the
	      nearest value in the specified data range.
	    </item> 

	    <item> 
	      Close the VI.
	    </item> 
	  </list>
	</section>
      </problem>
    <solution id="idm6016528">
      <para id="solution1">
        
  <media id="idp1947216" alt=""><labview src="AutoMatch.vi" viname="AutoMatch.vi" version="8.0" mime-type="application/x-labviewrpvi80" height="575" width="600"/></media></para>
    </solution></exercise>
  </content>
  
</document>