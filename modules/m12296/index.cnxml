<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Waveform Example VI</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>226e416e-e563-4b37-bc94-fd42cb4327bc</md:uuid>
</metadata>
  <!--Note: this module is waiting for CNXML 0.6, where items in lists
  can take para.  Items needing this feature have been marked.-->

  <content>
    <exercise id="e1">
      <problem id="idp688">
	<para id="p1">
	  For the ASCII waveform string, the waveform consists of 128
	  points. Up to four ASCII characters separated by commas
	  represent each point. The following header precedes the data
	  points:
	  <code display="block" id="idp2099920">
	    CURVE {12,28,63,...128 points in total...,}CR LF
	  </code>
	</para>
	<para id="p2">
	  For the binary waveform string, the waveform consists of 128
	  points. Each point is represented as a 1-byte unsigned
	  integer. The following header precedes the data points:
	  <code display="block" id="idm7567952">
	    CURVE % {Bin Count MSB}{Bin Count LSB}{åå¤Å...128 bytes in total...} {Checksum} CR LF
	  </code>
	</para>
	<para id="p3">
	  Complete the following steps to examine a VI that converts the
	  waveform to an array of numbers. The VI graphs the array and
	  reads the waveform string from the NI Instrument Simulator or
	  from a previously stored array.
	</para>
	<section id="s1">
	  <title>NI Instrument Simulator</title>
	  <list id="s1l1" list-type="enumerated">
	    <item>
	      Power off the NI Instrument Simulator and configure it to
	      communicate through the GPIB by setting <link target-id="s1l1f1">the switches</link> on the side of the box.
	      <figure id="s1l1f1">
		<media id="idm7017472" alt=""><image src="../../media/simgpib-0f3d.png" mime-type="image/png"/></media>
	      </figure>
	      These switch settings configure the instrument as a GPIB
	      device with an address of 2.
	    </item>
	    <item>
	      Power on the NI Instrument Simulator. Only the Power and
	      Ready LEDs are lit to indicate that the NI Instrument
	      Simulator is in GPIB communication mode.
	    </item>
	  </list>
	</section>
	<section id="s2">
	  <title>Front Panel</title>
	  <list id="s2l1" list-type="enumerated">
	    <item>
	      Open the <code>Waveform Example</code> VI located in the
	      <code>C:\Exercises\LabVIEW Basics I</code> directory. The
	      front panel shown in <link target-id="s2l1f1"/> is already
	      built.
	      <figure id="s2l1f1">
		<media id="idm5956752" alt=""><image src="../../media/waveex.png" mime-type="image/png"/></media>
	      </figure>
	      <term>Data Format</term> specifies an ASCII waveform or a
	      binary waveform. <term>Data Source</term> specifies whether
	      the data is simulated or read from the NI Instrument
	      Simulator through the GPIB.
	    </item>
	  </list>
	</section>
	<section id="s3">
	  <title>Block Diagram</title>
	  <list id="s3l1" list-type="enumerated">
	    <item>
	      Display and examine the block diagram shown in <link target-id="s3l1f1"/>.
	      <figure id="s3l1f1">
		<media id="idm526496" alt=""><image src="../../media/waveexbd.png" mime-type="image/png"/></media>
	      </figure>
	      <list id="s3l1l1">
		<item>
		    <media id="idm7440240" alt=""><image src="../../media/strsubseticon.png" mime-type="image/png"/></media>
		  The <code>String Subset</code>
		    function located on the <code>Functions&gt;&gt;All
		    Functions&gt;&gt;String</code> palette returns a substring of
		  128 elements starting from the fifth byte of the binary
		  waveform string, excluding the header and trailer bytes.
		</item>
		<item>
		    <media id="idp872352" alt=""><image src="../../media/strtobyteicon.png" mime-type="image/png"/></media>
		  The <code>String to Byte Array</code>
		    function, located on the <code>Functions&gt;&gt;All
		    Functions&gt;&gt;String&gt;&gt;String/Array/Path Conversion</code>
		  palette, converts the binary string to an array of
		  unsigned integers.
		</item>
		<item>
		    <media id="idp2360464" alt=""><image src="../../media/strglengthicon-9e3d.png" mime-type="image/png"/></media>
		  The <code>String Length</code>
		    function, located on the <code>Functions&gt;&gt;All
		    Functions&gt;&gt;String</code> palette, returns the number of
		  characters in the waveform string.
		</item>
		<item>
		    <media id="idp707728" alt=""><image src="../../media/extrctnumdblicon.png" mime-type="image/png"/></media>
		  The  <code>Extract Numbers</code> VI,
		  located in the <code>Exercises</code> directory,
		  extracts numbers from the ASCII waveform string and
		  places them in an array. Non-numeric characters, such as
		  commas, separate numbers in the string.
		</item>
		<item>
		  The <code>VISA Write</code> and <code>VISA Read</code>
		  functions, located on the <code>Functions&gt;&gt;All
		    Functions&gt;&gt;Instrument I/O&gt;&gt;VISA</code> palette, query
		  the NI Instrument Simulator for a square wave in either
		  ASCII or 1-byte binary format.
		</item>
		<item>
		    <media id="idm709840" alt=""><image src="../../media/Error-ebe9.png" mime-type="image/png"/></media>
		  The <code>Simple Error Handler</code>
		    VI, located on the <code>Functions&gt;&gt;All
		    Functions&gt;&gt;Time &amp; Dialog</code> palette, reports any
		  errors.
		</item>
	      </list>
	    </item>
	    <item><!--needs para tags-->
	      <!--para-->
	      Display the front panel and run the VI.  
	      <!--para-->
	      The True case acquires and converts the binary waveform
	      string to an array of numeric values. The False case
	      acquires and converts the ASCII waveform string to an array
	      of numeric values.
	    </item>
	    <item>
	      Set <code>Data Format</code> to <code>ASCII</code> and run
	      the VI. The ASCII waveform string displays, the VI converts
	      the values to a numeric array, and displays the string
	      length and numeric array.
	    </item>
	    <item>
	      Set <code>Data Format</code> to <code>Binary</code> and run
	      the VI again. The binary waveform string and string length
	      display, the VI converts the string to a numeric array, and
	      displays it in the graph.
	      <note id="idp2151728">
		The binary waveform is similar to the ASCII
		waveform. However, the number of bytes in the string is
		significantly lower. It is more efficient to transfer
		waveforms as binary strings than as ASCII strings because
		binary encoding requires fewer bytes to transfer the same
		information.
	      </note>
	    </item>
	    <item>
	      Close the VI. Do not save changes.
	    </item>
	  </list>
	</section>
      </problem>
    </exercise>
  </content>
  
</document>