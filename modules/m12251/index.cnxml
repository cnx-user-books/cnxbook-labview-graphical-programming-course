<document xmlns="http://cnx.rice.edu/cnxml" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Additional Exercises for Making Decisions in a VI</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>f03693de-b88d-4c8f-a503-4efcadf64e5c</md:uuid>
</metadata>

  <content>
    <exercise id="e1">
      <problem id="idm8882208">
	<para id="e1p1">
	  Build a VI that uses the <code>Formula Node</code> to
	  calculate the following equations:
	  <m:math display="block">
	    <m:apply>
	      <m:eq/>
	      <m:ci><m:msub>
		  <m:mi>y</m:mi>
		  <m:mi>1</m:mi>
		</m:msub></m:ci>
	      <m:apply>
		<m:plus/>
		<m:apply>
		  <m:power/>
		  <m:ci>x</m:ci>
		  <m:cn>3</m:cn>
		</m:apply>
		<m:apply>
		  <m:power/>
		  <m:ci>x</m:ci>
		  <m:cn>2</m:cn>
		</m:apply>
		<m:cn>5</m:cn>
	      </m:apply>
	    </m:apply>
	  </m:math>
	  <m:math display="block">
	    <m:apply>
	      <m:eq/>
	      <m:ci><m:msub>
		  <m:mi>y</m:mi>
		  <m:mi>2</m:mi>
		</m:msub></m:ci>
	      <m:apply>
		<m:plus/>
		<m:apply>
		  <m:times/>
		  <m:ci>m</m:ci>
		  <m:ci>x</m:ci>
		</m:apply>
		<m:ci>b</m:ci>
	      </m:apply>
	    </m:apply>
	  </m:math>
	</para>
	<para id="e1p2">
	  Use only one <code>Formula Node</code> for both equations
	  and use a semicolon (<code>;</code>) after each equation in
	  the node.
	</para>
	<para id="e1p3">
	  Save the VI as <code>Equations.vi</code> in the
	  <code>C:\Exercises\LabVIEW Basics I</code> directory.
	</para>
      </problem>
    </exercise>
    <exercise id="e2">
      <problem id="idm646144">
	<para id="e2p1">
	  Build a VI that functions like a calculator. On the front
	  panel, use numeric controls to input two numbers and a
	  numeric indicator to display the result of the operation
	  (<code>Add</code>, <code>Subtract</code>,
	  <code>Divide</code>, or <code>Multiply</code>) that the VI
	  performs on the two numbers. Use a slide control to specify
	  the operation to perform.
	</para>
	<para id="e2p2">
	  Save the VI as <code>Calculator.vi</code> in the
	  <code>C:\Exercises\LabVIEW Basics I</code> directory.
	</para>
      </problem>
    </exercise>
    <exercise id="e3">
      <problem id="idm243504">
	<para id="e3p1">
	  Modify the <link document="m12246">Square Root VI</link> so the VI
	  performs all calculations and condition checking using the
	  <code>Formula Node</code>.
	</para>
	<para id="e3p2">
	  Select <code>File&gt;&gt;Save As</code> to save the VI as
	  <code>Square Root 2.vi</code> in the
	  <code>C:\Exercises\LabVIEW Basics I</code> directory.
	</para>
      </problem>
    </exercise>
    <exercise id="e4">
      <problem id="idm303248">
	<para id="e4p1">
	  Build a VI that has two inputs, <code>Threshold</code> and
	  <code>Input Array</code>, and one output, <code>Output
	  Array</code>. <code>Output Array</code> contains values from
	  <code>Input Array</code> that are greater than
	  <code>Threshold</code>.
	</para>
	<para id="e4p2">
	  Save the VI as <code>Array Over Threshold.vi</code> in the
	  <code>C:\Exercises\LabVIEW Basics I</code> directory.
	</para>
	<para id="e4p3">
	  Create another VI that generates an array of random numbers
	  between 0 and 1 and uses the <code>Array Over Threshold
	  VI</code> to output an array with the values greater than
	  0.5.
	</para>
	<para id="e4p4">
	  Save the VI as <code>Using Array Over Threshold.vi</code> in
	  the <code>C:\Exercises\LabVIEW Basics I</code> directory.
	</para>
      </problem>
    </exercise>
  </content>
  
</document>