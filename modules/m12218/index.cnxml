<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Accessing Previous Data VI</title>
  <metadata><md:content-id>undefined</md:content-id><md:title/><md:uuid>01477a50-df38-4693-b640-c3391cf16727</md:uuid>
</metadata>
  
  <content>
    <exercise id="e1">
      <problem id="idp902752">
	<section id="idp903104">
	  <title> Front Panel </title> 
	  <list id="pain" list-type="enumerated">
	    <item> 

	      Open the <code>Feedback</code> VI located in the
	      <code>C:\Exercises\LabVIEW Basics I </code> directory. The
	      front panel shown in <link target-id="imagin1"/> is already
	      built.
	      <figure id="imagin1">
		<media id="idp1217184" alt=""><image src=" feedbackfp.png" mime-type="image/png"/></media>
	      </figure>
	      
	    </item> 
	  </list>
	</section>
	
	
	<section id="idp1495120">
	  <title> Block Diagram </title> 
	  
	  <list id="pain1" list-type="enumerated">
	    <item> 
	      <!--para-->
	      Display the <link target-id="imagin2">block diagram</link> and
	      make sure both the front panel and block diagram are
	      visible. If necessary, close or move the <code>Tools</code>
	      and <code>Functions</code> palettes.
	      <figure id="imagin2">
		<media id="idm8516912" alt=""><image src="../../media/feedbackbd.png" mime-type="image/png"/></media>
	      </figure>
	      The <code>1</code> wired to the left terminals on the
	      <code>For Loop</code> initializes the <code>Feedback
		Node</code> to <code>1</code>.
	      <!--para-->
	      The <code>Wait Until Next ms Timer</code> slows the
	      operation of the code. You also could use <code>Highlight
		Execution</code> instead of the wait function to slow the
	      operation.
	      <!--para-->
	      The same code is used twice in this block diagram with the
	      <code>Feedback Node</code> in a different portion of the
	      wire.
	    </item>
	  </list>
	</section>

	<section id="idm289648">
	  <title> Run the VI </title> 
	  <list id="pain2" list-type="enumerated">
	    
	    <item>
	      <!--para-->
	      Run the VI.
	      <!--para-->
	      The top section of the code reads the initialized
	      <code>Feedback Node</code> and passes this value to the
	      <code>Multiply</code> function.
	      <!--para-->
	      The bottom section of the code reads the initialized
	      <code>Feedback Node</code> and passes this value to the
	      indicator. This <code>Multiply</code> function does not
	      execute until the next iteration of the loop.  
	    </item>
	    <item>
	      <media id="idm1254608" alt=""><image src="../../media/exehilit-0604.png" id="m1" mime-type="image/png"/></media>
	      Click the <code>Highlight Execution</code> button, shown in
	      <link target-id="m1"/>, to enable execution highlighting. Run
	      the VI again to observe the order of execution. Turn off
	      execution highlighting when you understand the execution
	      order. The VI continues executing at normal speed.  
	    </item>
	    
	    <item> 
	      Replace the bottom <code>Feedback Node</code> with a
	      <code>shift register</code>, as shown in <link target-id="imagin3"/>.
	      <figure id="imagin3">
		<media id="idm7277760" alt=""><image src="../../media/feedbackbdedit.png" mime-type="image/png"/></media>
	      </figure> 
	      <list id="pain3" list-type="enumerated">
		<item> 
		  Select the bottom <code>Feedback Node</code> and press
		  the <code>&lt;Delete</code> key to delete it.
		</item>
		<item> 
		  Right-click the border of the <code>For Loop</code> and
		  select <code>Add Shift Register</code>.  
		</item>    
		<item> 
		  Initialize the <code>shift register</code> by wiring
		  <code>1</code> to the left <code>shift register</code>.
		</item>
		<item> 
		  Change the label of the bottom indicator to <code>Shift
		    Register</code> and the top indicator to <code>Feedback
		    Node</code>.
		</item>    
	      </list>
	    </item> 
	    <item> 
	      <!--para-->
	      Run the VI.
	      <!--para-->
	      Notice that both the <code>Feedback Node</code> and the
	      <code>shift register</code> portions of the block diagram
	      have the same functionality.  </item>
	    <item> 
	      If time permits, complete the following optional steps;
	      otherwise, close the VI and do not save changes.
	    </item>
	  </list>  
	</section>   
	<section id="idm789536">     
	  <title>Optional</title> 
	  <list id="pain4" list-type="enumerated">
	    <item>  
	      Revise the <code>shift register</code> to display the last
	      three iterations of the <code>For Loop</code> data, as shown
	      in <link target-id="imagin4"/>.
	      <figure id="imagin4">
		<media id="idp1158336" alt=""><image src="../../media/moreiterations.png" mime-type="image/png"/></media>
	      </figure> 
	      <list id="painla" list-type="enumerated">
		<item> 
		  Resize the left <code>shift register</code> to three
		  elements. Right-click the <code>shift register</code>
		  and select <code>Add Element</code> from the shortcut
		  menu to add each <code>shift register</code>.
		</item>	    
		<item> 
		  Initialize each elements of the <code>shift
		    register</code> to <code>1</code>.
		</item>
		<item>
		  Right-click each element of the <code>shift
		  register</code> and select
		  <code>Create&gt;&gt;Indicator</code>. Label each
		  indicator.
		</item>
	      </list>
	    </item> 
	    <item> 
	      Run the VI.
	    </item> 
	    <item> 
	      Close the VI. Do not save changes.
	    </item> 
	  </list>
	</section>
      </problem>
    </exercise>
  </content>
  
</document>